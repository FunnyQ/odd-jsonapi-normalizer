{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 57d55f8466f522af4834","webpack:///./src/normalizer.js"],"names":["Normalizer","response","data","Array","isArray","includedResources","included","resources","serverSideSort","entities","meta","forEach","resource","__recordServerSideSort","__writeToEntities","type","push","id","Object","assign","attributes","__relationshipsFrom","__apiData","relationships","result","keys","relationshipName","__apiInfo","hasOwnProperty","links","normalize"],"mappings":"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","file":"odd-jsonapi_normalizer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"odd-jsonapi_normalizer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"odd-jsonapi_normalizer\"] = factory();\n\telse\n\t\troot[\"odd-jsonapi_normalizer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 57d55f8466f522af4834","export default class Normalizer {\n  /**\n   *Creates an instance of Normalizer.\n   * @param {Object} response response that returned by Axios\n   * @memberof Normalizer\n   */\n  constructor(response) {\n    this.data = Array.isArray(response.data) ? response.data : [response.data]\n    this.includedResources = response.included || []\n    this.resources = [...this.data, ...this.includedResources]\n    this.serverSideSort = {}\n    this.entities = {}\n    this.meta = response.meta\n  }\n\n  /**\n   * short hand for new Normalizer(response).normalize()\n   *\n   * @static\n   * @param {Object} response response that returned by Axios\n   * @returns {Object} { serverSideSort, entities, meta }\n   * @memberof Normalizer\n   */\n  static normalize(response) {\n    return new this(response).normalize()\n  }\n\n  /**\n   * normalizing JSON:API response\n   *\n   * @returns {Object} { serverSideSort, entities, meta }\n   * @memberof Normalizer\n   */\n  normalize() {\n    this.resources.forEach((resource) => {\n      this.__recordServerSideSort(resource)\n      this.__writeToEntities(resource)\n    })\n\n    return {\n      entities: this.entities,\n      meta: this.meta,\n      serverSideSort: this.serverSideSort\n    }\n  }\n\n  /**\n   * keep server-side sort by an array of ids\n   *\n   * @param {Object} resource JSON:API resource object\n   * @memberof Normalizer\n   */\n  __recordServerSideSort(resource) {\n    if (!this.serverSideSort[resource.type]) this.serverSideSort[resource.type] = []\n\n    this.serverSideSort[resource.type].push(resource.id)\n  }\n\n  /**\n   * record resource into entities object in `entities[type][id]` format.\n   * will remove `type` property.\n   * relationships will been added as attributes, and each relationship will contain `type` and `id` from JSON:API.\n   *\n   * @param {Object} resource JSON:API resource object\n   * @memberof Normalizer\n   */\n  __writeToEntities(resource) {\n    if (!this.entities[resource.type]) this.entities[resource.type] = {}\n\n    this.entities[resource.type][resource.id] = Object.assign(\n      { id: resource.id },\n      resource.attributes,\n      this.__relationshipsFrom(resource),\n      this.__apiData(resource)\n    )\n  }\n\n  /**\n   * Converting `relationships` in a resource into\n   * `{ brand: { type: 'product-brand', id: '1' } }` format.\n   * If it is an one-to-many relationship, result will like\n   * `{ variants: [{ type: 'product-variants', id: '1' }, { type: 'product-variants', id: '2' }] }`\n   *\n   * @param {Object} resource JSON:API resource object\n   * @returns\n   * @memberof Normalizer\n   */\n  __relationshipsFrom(resource) {\n    if (!resource.relationships) return null\n\n    let result = {}\n\n    Object.keys(resource.relationships).forEach((relationshipName) => {\n      result[relationshipName] = resource.relationships[relationshipName].data\n    })\n\n    return result\n  }\n\n  /**\n   * save JSON:API resource type and otherinfo in `__apiData` attribute.\n   *\n   * @param {Object} resource JSON:API resource object\n   * @returns\n   * @memberof Normalizer\n   */\n  __apiData(resource) {\n    let result = {\n      __apiInfo: {\n        type: resource.type\n      }\n    }\n\n    if (resource.hasOwnProperty('links')) Object.assign(result.__apiInfo, { links: resource.links })\n    return result\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/normalizer.js"],"sourceRoot":""}